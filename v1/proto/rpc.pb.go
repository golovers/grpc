// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

/*
Package gosharing_grpc_greeting is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	GreetingRequest
	GreetingResponse
	Greeting
*/
package gosharing_grpc_greeting

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GreetingRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *GreetingRequest) Reset()                    { *m = GreetingRequest{} }
func (m *GreetingRequest) String() string            { return proto.CompactTextString(m) }
func (*GreetingRequest) ProtoMessage()               {}
func (*GreetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GreetingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GreetingRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GreetingResponse struct {
	Message *Greeting `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *GreetingResponse) Reset()                    { *m = GreetingResponse{} }
func (m *GreetingResponse) String() string            { return proto.CompactTextString(m) }
func (*GreetingResponse) ProtoMessage()               {}
func (*GreetingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GreetingResponse) GetMessage() *Greeting {
	if m != nil {
		return m.Message
	}
	return nil
}

type Greeting struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Greeting) Reset()                    { *m = Greeting{} }
func (m *Greeting) String() string            { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()               {}
func (*Greeting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Greeting) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Greeting) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GreetingRequest)(nil), "gosharing.grpc.greeting.GreetingRequest")
	proto.RegisterType((*GreetingResponse)(nil), "gosharing.grpc.greeting.GreetingResponse")
	proto.RegisterType((*Greeting)(nil), "gosharing.grpc.greeting.Greeting")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greetings service

type GreetingsClient interface {
	Say(ctx context.Context, in *GreetingRequest, opts ...grpc.CallOption) (*GreetingResponse, error)
}

type greetingsClient struct {
	cc *grpc.ClientConn
}

func NewGreetingsClient(cc *grpc.ClientConn) GreetingsClient {
	return &greetingsClient{cc}
}

func (c *greetingsClient) Say(ctx context.Context, in *GreetingRequest, opts ...grpc.CallOption) (*GreetingResponse, error) {
	out := new(GreetingResponse)
	err := grpc.Invoke(ctx, "/gosharing.grpc.greeting.Greetings/Say", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Greetings service

type GreetingsServer interface {
	Say(context.Context, *GreetingRequest) (*GreetingResponse, error)
}

func RegisterGreetingsServer(s *grpc.Server, srv GreetingsServer) {
	s.RegisterService(&_Greetings_serviceDesc, srv)
}

func _Greetings_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetingsServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gosharing.grpc.greeting.Greetings/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetingsServer).Say(ctx, req.(*GreetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greetings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gosharing.grpc.greeting.Greetings",
	HandlerType: (*GreetingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Greetings_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4f, 0xcf, 0x2f, 0xce, 0x48, 0x2c, 0xca, 0xcc, 0x4b,
	0xd7, 0x4b, 0x07, 0x89, 0xa6, 0x17, 0xa5, 0xa6, 0x96, 0x64, 0xe6, 0xa5, 0x2b, 0x59, 0x72, 0xf1,
	0xbb, 0x43, 0xd9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89,
	0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0xac, 0xa4, 0xb2, 0x20,
	0x55, 0x82, 0x09, 0x22, 0x06, 0x62, 0x2b, 0xf9, 0x73, 0x09, 0x20, 0xb4, 0x16, 0x17, 0xe4, 0xe7,
	0x15, 0xa7, 0x0a, 0x59, 0x73, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0x43, 0xb4, 0x73, 0x1b,
	0x29, 0xea, 0xe1, 0xb0, 0x59, 0x0f, 0xae, 0x17, 0xa6, 0x43, 0xc9, 0x8a, 0x8b, 0x03, 0x26, 0x28,
	0x24, 0xc2, 0xc5, 0x5a, 0x92, 0x59, 0x92, 0x03, 0x73, 0x05, 0x84, 0x23, 0x24, 0x81, 0x30, 0x1e,
	0xe2, 0x12, 0x18, 0xd7, 0x28, 0x93, 0x8b, 0x13, 0xa6, 0xb7, 0x58, 0x28, 0x86, 0x8b, 0x39, 0x38,
	0xb1, 0x52, 0x48, 0x83, 0xb0, 0xdd, 0x10, 0x2f, 0x4b, 0x69, 0x12, 0xa1, 0x12, 0xe2, 0x43, 0x25,
	0x86, 0x24, 0x36, 0x70, 0x90, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x41, 0x38, 0x05,
	0x5f, 0x01, 0x00, 0x00,
}
